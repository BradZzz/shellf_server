"""
Django settings for bookexplorer project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
from os.path import abspath, basename, dirname, join, normpath

SECRET_KEY = '28!ivzrmvw+i@@iogodd3m%@7-nqg$o!n=@73+bt-zqay4e-c5'

# Replace BASE_DIR with this
DJANGO_ROOT = dirname(dirname(abspath(__file__)))
SITE_ROOT = dirname(DJANGO_ROOT)
SITE_NAME = basename(DJANGO_ROOT)


#SECRET_KEY = '28!ivzrmvw+i@@iogodd3m%@7-nqg$o!n=@73+bt-zqay4e-c5'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = os.path.join(DJANGO_ROOT, 'static')
MEDIA_ROOT = os.path.join(DJANGO_ROOT, 'media')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '*a$u3meh$*2)j5w9-@29i-_h6+3%q0(2%*7fph-o_bry_z@-89'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0','127.0.0.1','peaceful-badlands-42479.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'main.apps.MainConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # full stack pipeline
    'pipeline',
    # DjangoRestFramework
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookexplorer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookexplorer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(DJANGO_ROOT, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)

STATIC_URL = 'bookexplorer/static/'
STATIC_ROOT = normpath(join(SITE_ROOT, 'bookexplorer/static'))
STATICFILES_DIRS = ()

# Django Pipeline (and browserify)
STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
)

# browserify-specific
# PIPELINE_COMPILERS = (
#     'pipeline_browserify.compiler.BrowserifyCompiler',
# )

# PIPELINE_CSS_COMPRESSOR = 'pipeline.compressors.NoopCompressor'
# PIPELINE_JS_COMPRESSOR = 'pipeline.compressors.uglifyjs.UglifyJSCompressor'

PIPELINE = {
    'CSS_COMPRESSOR' : 'pipeline.compressors.NoopCompressor',
    'JS_COMPRESSOR' : 'pipeline.compressors.uglifyjs.UglifyJSCompressor',
    'STYLESHEETS': {
        'dist': {
            'source_filenames': (
                'css/style.css',
            ),
            'output_filename': 'css/dist.css',
        },
    },
    'JAVASCRIPT': {
        'dist': {
            'source_filenames': (
                'js/third-party/jquery/dist/jquery.min.js',
                'js/third-party/react/react-with-addons.js',
                'js/app.browserify.js',
            ),
            'output_filename': 'js/dist.js',
        }
    },
    'COMPILERS': ('pipeline_browserify.compiler.BrowserifyCompiler', ),
    'BROWSERIFY_ARGS' : "--transform [ babelify --presets [ es2015 react ] --plugins [ transform-object-rest-spread transform-class-properties ] ]".split(),
}



# if DEBUG:
#     #PIPELINE_BROWSERIFY_ARGUMENTS = '-t babelify'
#     #PIPELINE['BROWSERIFY_ARGS'] = '-t babelify'
#     PIPELINE['BROWSERIFY_ARGS'] = ['-d']

# PIPELINE_CSS = {
#     'booksite_css': {
#         'source_filenames': (
#             'css/style.css',
#         ),
#         'output_filename': 'css/booksite_css.css',
#     },
# }
#
# PIPELINE_JS = {
#     'booksite_js': {
#         'source_filenames': (
#             'js/third-party/jquery/dist/jquery.min.js',
#             'js/third-party/react/JSXTransformer.js',
#             'js/third-party/react/react-with-addons.js',
#             'js/app.browserify.js',
#         ),
#         'output_filename': 'js/dist.js',
#     }
# }